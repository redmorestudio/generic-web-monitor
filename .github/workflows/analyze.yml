name: 3. Analyze Content

on:
  # Allow manual trigger
  workflow_dispatch:
    inputs:
      trigger_source:
        description: 'What triggered this workflow'
        required: false
        type: string
        default: 'manual'
      run_id:
        description: 'Previous workflow run ID'
        required: false
        type: string
      analysis_mode:
        description: 'Analysis mode'
        required: false
        type: choice
        default: 'all'
        options:
          - all           # Analyze everything
          - only-new      # Only unanalyzed content
          - force         # Force re-analyze all
          - changes-only  # Only analyze detected changes
      use_three_db:
        description: 'Use three-database architecture'
        required: false
        type: string
        default: 'true'
  
  # Allow being called by other workflows
  workflow_call:
    inputs:
      trigger_source:
        description: 'What triggered this workflow'
        required: false
        type: string
        default: 'manual'
      run_id:
        description: 'Previous workflow run ID'
        required: false
        type: string
      analysis_mode:
        description: 'Analysis mode'
        required: false
        type: string
        default: 'all'
    outputs:
      run_id:
        description: 'The workflow run ID'
        value: ${{ jobs.analyze-content.outputs.run_id }}

# Prevent concurrent runs
concurrency:
  group: analyze-workflow
  cancel-in-progress: false

env:
  NODE_ENV: production
  USE_THREE_DB: ${{ inputs.use_three_db || 'true' }}

jobs:
  analyze-content:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    
    outputs:
      run_id: ${{ github.run_id }}
    
    permissions:
      contents: write
      actions: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd github-actions-backend
          # Use npm install instead of npm ci to handle package-lock.json mismatches
          npm install --omit=dev
      
      # FIXED: Removed artifact downloads - use committed files instead
      - name: Ensure latest database files
        run: |
          cd github-actions-backend
          echo "‚úÖ Using committed database files from repository"
          echo "üìÅ Available databases:"
          ls -la data/*.db || true
      
      # Fix missing enhanced_analysis table (only for legacy)
      - name: Fix database schema (legacy)
        if: ${{ env.USE_THREE_DB != 'true' }}
        run: |
          cd github-actions-backend
          echo "üîß Ensuring enhanced_analysis table exists..."
          node scripts/fix-enhanced-analysis-table.js
      
      - name: Run baseline AI analysis
        run: |
          cd github-actions-backend
          
          echo "üöÄ Running baseline analysis with Groq Llama 3.3..."
          echo "   Mode: ${{ inputs.analysis_mode }}"
          echo "   Architecture: ${{ env.USE_THREE_DB == 'true' && 'Three-Database' || 'Legacy' }}"
          
          # Set analysis flags based on mode
          case "${{ inputs.analysis_mode }}" in
            "only-new")
              node ai-analyzer-baseline-wrapper.js --only-new
              ;;
            "force")
              node ai-analyzer-baseline-wrapper.js --force
              ;;
            "changes-only")
              echo "‚ö†Ô∏è  Changes-only mode not yet implemented"
              node ai-analyzer-baseline-wrapper.js --only-new
              ;;
            *)
              node ai-analyzer-baseline-wrapper.js
              ;;
          esac
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_ACTIONS: 'true'
      
      - name: Run change detection analysis
        if: ${{ inputs.analysis_mode != 'changes-only' }}
        run: |
          cd github-actions-backend
          
          echo "üîç Running change detection and ultra-enhanced analysis with Groq..."
          node ai-analyzer-ultra-wrapper.js full || echo "Change analysis completed"
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GITHUB_ACTIONS: 'true'
      
      - name: Generate static data files
        run: |
          cd github-actions-backend
          echo "üìä Generating static data files..."
          node generate-static-data-wrapper.js
          
          echo "üìÅ Generated files:"
          ls -la ../api-data/
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      
      - name: Create analysis summary
        run: |
          cd github-actions-backend
          echo "{
            \"workflow\": \"analyze\",
            \"run_id\": \"${{ github.run_id }}\",
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)\",
            \"mode\": \"${{ inputs.analysis_mode }}\",
            \"trigger_source\": \"${{ inputs.trigger_source }}\",
            \"architecture\": \"${{ env.USE_THREE_DB == 'true' && 'three-db' || 'legacy' }}\",
            \"ai_model\": \"groq-llama-3.3-70b\",
            \"status\": \"completed\"
          }" > ../api-data/last-analysis.json
      
      - name: Upload analysis artifacts
        uses: actions/upload-artifact@v4
        with:
          name: analysis-results-${{ github.run_id }}
          path: |
            github-actions-backend/data/baseline-intelligence-report.json
            api-data/
          retention-days: 30
      
      - name: Commit analysis results
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # FIXED: Removed git reset --hard that was wiping out generated files
          # Just pull the latest changes to avoid conflicts
          git pull origin main --rebase || true
          
          # Add all analysis outputs
          git add api-data/ || true
          git add github-actions-backend/data/*.json || true
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "üìù Changes to commit:"
            git diff --staged --name-only
            
            git commit -m "üöÄ Update AI analysis (Groq) - $(date -u +%Y-%m-%d_%H:%M:%S_UTC)"
            
            # Push changes
            git push origin main
          fi
      
      # Trigger next workflow if successful
      - name: Trigger sync workflow
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.AI_COMPETITIVE_MONITOR_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'sync.yml',
              ref: 'main',
              inputs: {
                trigger_source: 'analyze',
                run_id: '${{ github.run_id }}'
              }
            });

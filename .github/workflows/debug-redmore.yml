name: Debug Redmore Studio Scrape

on:
  workflow_dispatch:

jobs:
  debug-redmore:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        lfs: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: github-actions-backend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd github-actions-backend
        npm ci
    
    - name: Debug Redmore Studio URLs
      env:
        NODE_ENV: production
        USE_THREE_DB: true
        GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
      run: |
        cd github-actions-backend
        echo "üîç Checking Redmore Studio in database..."
        node -e "
        const Database = require('better-sqlite3');
        const path = require('path');
        
        const dataDir = path.join(__dirname, 'data');
        const intelligenceDb = new Database(path.join(dataDir, 'intelligence.db'));
        
        console.log('\\nüìä Redmore Studio Company Info:');
        const company = intelligenceDb.prepare('SELECT * FROM companies WHERE name LIKE ?').get('%redmore%');
        console.log(company);
        
        if (company) {
          console.log('\\nüîó Redmore Studio URLs:');
          const urls = intelligenceDb.prepare('SELECT * FROM urls WHERE company_id = ?').all(company.id);
          urls.forEach(url => {
            console.log(\`  URL ID: \${url.id}, URL: \${url.url}, Last Scraped: \${url.last_scraped || 'NEVER'}\`);
          });
        }
        
        intelligenceDb.close();
        "
        
        echo -e "\nüï∑Ô∏è Running scraper for Redmore Studio only..."
        node -e "
        const IntelligentScraper = require('./scraper-three-db');
        const Database = require('better-sqlite3');
        const path = require('path');
        
        async function debugRedmore() {
          const dataDir = path.join(__dirname, 'data');
          const intelligenceDb = new Database(path.join(dataDir, 'intelligence.db'));
          
          // Get Redmore Studio URLs
          const company = intelligenceDb.prepare('SELECT * FROM companies WHERE name LIKE ?').get('%redmore%');
          const urls = intelligenceDb.prepare('SELECT * FROM urls WHERE company_id = ?').all(company.id);
          
          intelligenceDb.close();
          
          // Create a modified scraper that only processes Redmore
          const scraper = new IntelligentScraper();
          await scraper.initialize();
          
          console.log('\\nüéØ Scraping Redmore Studio URLs only...');
          for (const url of urls) {
            const urlWithCompany = { ...url, companyName: company.name };
            const result = await scraper.scrapeUrlWithRetry(urlWithCompany, company.name);
            console.log(\`Result for \${url.url}:`, result);
          }
          
          await scraper.shutdown();
        }
        
        debugRedmore().catch(console.error);
        "

name: Process Content (PostgreSQL)

on:
  workflow_dispatch:
    inputs:
      cascade:
        description: 'Trigger next workflow in chain'
        required: false
        type: boolean
        default: true
  workflow_call:
    inputs:
      cascade:
        description: 'Trigger next workflow in chain'
        required: false
        type: boolean
        default: true

permissions:
  contents: write
  actions: write

concurrency:
  group: process-workflow
  cancel-in-progress: false

env:
  NODE_ENV: production

jobs:
  process-content:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd github-actions-backend
          npm install --omit=dev
      
      - name: Fix PostgreSQL Schema
        env:
          POSTGRES_CONNECTION_STRING: ${{ secrets.POSTGRES_CONNECTION_STRING }}
        run: |
          cd github-actions-backend
          
          echo "üîß Ensuring PostgreSQL schema is correct..."
          node fix-postgres-schema-complete.js
      
      - name: Convert HTML to Markdown with PostgreSQL
        env:
          POSTGRES_CONNECTION_STRING: ${{ secrets.POSTGRES_CONNECTION_STRING }}
        run: |
          cd github-actions-backend
          
          echo "üìù Converting HTML to Markdown using PostgreSQL..."
          node markdown-converter-three-db-postgres.js
      
      - name: Generate static data with PostgreSQL
        env:
          POSTGRES_CONNECTION_STRING: ${{ secrets.POSTGRES_CONNECTION_STRING }}
        run: |
          cd github-actions-backend
          
          echo "üìä Generating static data files..."
          node generate-static-data-three-db-postgres.js
      
      - name: Commit static data
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add the generated static data
          git add api-data/
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "üîÑ Update static data from PostgreSQL - $(date -u +%Y-%m-%d\ %H:%M:%S\ UTC)"
            
            # Push with retry logic
            for attempt in {1..5}; do
              if git push; then
                echo "Successfully pushed on attempt $attempt"
                break
              else
                echo "Push failed on attempt $attempt, retrying..."
                git pull --rebase
                sleep $((2 ** (attempt - 1)))
              fi
            done
          fi
      
      - name: Trigger Analyze workflow
        if: inputs.cascade == true
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'analyze-postgres.yml',
              ref: 'main',
              inputs: {
                cascade: 'true'
              }
            });
            console.log('‚úÖ Triggered Analyze workflow');
